# 模式配置（ShardingSphere 的运行模式）
mode:
  type: Standalone  #  standalone 表示单机模式，适用于非集群环境；集群环境可使用 Cluster 模式
  #  单机模式无需注册中心，配置简单，适合开发和小规模部署

# 数据源配置（数据库连接信息）
dataSources:
  easy_answer: # 自定义数据源名称，可根据业务命名（如主库、从库等）
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource  # 数据库连接池类型，这里使用 HikariCP（高性能连接池）
    driverClassName: com.mysql.cj.jdbc.Driver  # MySQL 数据库驱动类（注意版本兼容性）
    jdbcUrl: jdbc:mysql://123.56.52.251:3306/easy_answer?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true  # 数据库连接 URL
    username: root  # 数据库登录用户名
    password: 123456lhl  # 数据库登录密码

# 规则配置（核心分片规则）
rules:
  # 数据分片规则（!SHARDING 是 ShardingSphere 的 YAML 标签语法，表示这是分片规则配置）
  - !SHARDING
    tables: # 表级别的分片配置，只需要配置需要分片的表
      user_answer: # 需要分片的表名（逻辑表名）
        actualDataNodes: easy_answer.user_answer_$->{0..1}  # 实际数据节点（物理表）
        # 格式：数据源名称.物理表名，$->{0..1} 表示生成 0 和 1 两个后缀
        # 即实际存在的表是 easy_answer 库下的 user_answer_0 和 user_answer_1
        tableStrategy: # 表分片策略（如何将数据分配到不同物理表）
          standard: # 标准分片策略（适用于单分片键的场景）
            shardingColumn: app_id  # 分片键（根据哪个字段进行分片）
            # 注意：此字段必须在插入/查询时提供，否则无法确定路由
            shardingAlgorithmName: answer-table-inline  # 关联的分片算法名称（需与下方 shardingAlgorithms 中的配置对应）
      # 以下表未配置分片策略，仅指定实际数据节点（表示这些表不分片，直接使用原表）
      user:
        actualDataNodes: easy_answer.user  # 直接映射到 easy_answer 库下的 user 表
      app:
        actualDataNodes: easy_answer.app  # 直接映射到 easy_answer 库下的 app 表
      question:
        actualDataNodes: easy_answer.question  # 直接映射到 easy_answer 库下的 question 表
      scoring_result:
        actualDataNodes: easy_answer.scoring_result
      chart:
        actualDataNodes: easy_answer.chart  # 直接映射到 easy_answer 库下的 chart 表
      picture:
        actualDataNodes: easy_answer.picture  # 直接映射到 easy_answer 库下的 chart 表

    # 分片算法配置（定义具体的分片逻辑）
    shardingAlgorithms:
      answer-table-inline: # 算法名称，需与 tableStrategy 中引用的名称一致
        type: INLINE  # 算法类型：INLINE 表示行表达式算法（适用于简单分片场景）
        props: # 算法属性（行表达式的具体规则）
          algorithm-expression: user_answer_$->{app_id % 2}  # 分片表达式
          # 逻辑：根据 app_id 对 2 取模，结果为 0 则路由到 user_answer_0，结果为 1 则路由到 user_answer_1
          # 注意：表达式中的变量名必须与 shardingColumn 一致（此处为 app_id）

# 其他属性配置
props:
  sql-show: true  # 开启 SQL 显示（会在日志中打印 ShardingSphere 处理后的真实 SQL）
  # 开发环境建议开启，方便调试；生产环境可关闭以减少日志量